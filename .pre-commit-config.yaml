# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    -   id: check-added-large-files  #prevents giant files from being committed.
    -   id: check-ast  #simply checks whether the files parse as valid python.
    -   id: check-byte-order-marker  #forbids files which have a utf-8 byte-order marker.
    -   id: check-builtin-literals  #requires literal syntax when initializing empty or zero python builtin types.
    -   id: check-case-conflict  #checks for files that would conflict in case-insensitive filesystems.
    -   id: check-docstring-first  #checks a common error of defining a docstring after code.
    -   id: check-executables-have-shebangs  #ensures that (non-binary) executables have a shebang.
    -   id: check-json  #checks json files for parseable syntax.\
    -   id: pretty-format-json  #sets a standard for formatting json files.
    -   id: check-merge-conflict  #checks for files that contain merge conflict strings.
    -   id: check-symlinks  #checks for symlinks which do not point to anything.
    -   id: check-toml  #checks toml files for parseable syntax.
    -   id: check-vcs-permalinks  #ensures that links to vcs websites are permalinks.
    -   id: check-xml  #checks xml files for parseable syntax.
    -   id: check-yaml  #checks yaml files for parseable syntax.
    -   id: debug-statements  #checks for debugger imports and py37+ `breakpoint()` calls in python source.
    -   id: detect-private-key  #detects the presence of private keys.
#    -   id: double-quote-string-fixer  #replaces double quoted strings with single quoted strings.
    -   id: end-of-file-fixer  #ensures that a file is either empty, or ends with one newline.
    -   id: file-contents-sorter  #sorts the lines in specified files (defaults to alphabetical). you must provide list of target files as input in your .pre-commit-config.yaml file.
    -   id: forbid-new-submodules  #prevents addition of new git submodules.
    -   id: mixed-line-ending  #replaces or checks mixed line ending.
#    -   id: name-tests-test  #verifies that test files are named correctly.
#    -   id: no-commit-to-branch  #don't commit to branch
    -   id: requirements-txt-fixer  #sorts entries in requirements.txt.
    -   id: sort-simple-yaml  #sorts simple yaml files which consist only of top-level keys, preserving comments and blocks.
    -   id: trailing-whitespace  #trims trailing whitespace.

#-   repo: https://github.com/asottile/add-trailing-comma
#    rev: v3.1.0
#    hooks:
#    -   id: add-trailing-comma

#-   repo: https://github.com/asottile/yesqa
#    rev: v1.5.0
#    hooks:
#    -   id: yesqa

#-   repo: https://github.com/pre-commit/mirrors-mypy
#    rev: v1.0.0
#    hooks:
#    -   id: mypy

-   repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
    -   id: black
        args: [--line-length=120]

-   repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.6.9
    hooks:
    -   id: ruff
        args: [--fix, --exit-non-zero-on-fix, --line-length=120]

#-   repo: https://github.com/PyCQA/isort
#    rev: 5.13.2
#    hooks:
#    -   id: isort
#        name: isort (python)

-   repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
    -   id: autoflake

-   repo: https://github.com/PyCQA/flake8
    rev: 7.1.1
    hooks:
    -   id: flake8
        args: [--max-line-length=120]

-   repo: https://github.com/PyCQA/pylint
    rev: v3.3.1
    hooks:
    -   id: pylint
        args: ['--disable=E0401,C0103,C0114,C0115,C0116,R0903', '--max-line-length=120']

-   repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
    -   id: bandit
        exclude: ^tests/

exclude: core/alembic/
